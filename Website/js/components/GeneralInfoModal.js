import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState, useEffect } from 'react';
import { X, ChevronDown, Hotel, Users, Phone, Mail, MapPin, Hospital, Shield, ShoppingCart, Utensils, Building2, Map, Puzzle, Car } from 'lucide-react';
import VenueMapModal from '@/components/VenueMapModal';
import { hotelDetails, deltekContacts, emergencyServices, localAmenities, restaurants, leisureActivities } from '@/lib/eventInfo';
// --- Sub-components --- //
const AccordionItem = ({ title, icon, children, isOpen, onToggle }) => {
    const contentId = `accordion-content-${title.replace(/\s+/g, '-').toLowerCase()}`;
    return (_jsxs("div", { className: "border-b border-[var(--color-border-subtle)]", children: [_jsxs("button", { onClick: onToggle, className: "w-full flex justify-between items-center text-left p-4 hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors", "aria-expanded": isOpen, "aria-controls": contentId, children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "text-[var(--color-primary)]", children: icon }), _jsx("span", { className: "font-semibold text-[var(--color-text-main)]", children: title })] }), _jsx(ChevronDown, { className: `w-5 h-5 text-gray-500 transition-transform ${isOpen ? 'rotate-180' : ''}` })] }), isOpen && _jsx("div", { id: contentId, role: "region", className: "p-4 bg-gray-50", children: children })] }));
};
const RestaurantCard = ({ name, description }) => (_jsxs("div", { className: "bg-white p-3 rounded-md border border-[var(--color-border)]", children: [_jsx("a", { href: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(name + ' Goa')}`, target: "_blank", rel: "noopener noreferrer", className: "font-semibold text-[var(--color-primary)] hover:underline", children: name }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: description })] }));
const ActivityTable = ({ title, items, columns, timings }) => (_jsxs("div", { className: "mb-4", children: [_jsx("h4", { className: "font-bold text-[var(--color-text-main)] mb-1", children: title }), _jsxs("p", { className: "text-xs text-gray-500 mb-2", children: ["Timings: ", timings] }), _jsx("div", { className: "overflow-x-auto bg-white rounded-md border", children: _jsxs("table", { className: "w-full text-sm text-left", children: [_jsx("thead", { className: "bg-gray-50", children: _jsx("tr", { className: "border-b border-[var(--color-border)]", children: columns.map(col => _jsx("th", { className: "p-2 font-semibold", children: col.header }, col.accessor)) }) }), _jsx("tbody", { children: items.map((item, index) => (_jsx("tr", { className: "border-b border-[var(--color-border-subtle)] last:border-b-0", children: columns.map(col => _jsx("td", { className: "p-2 whitespace-nowrap", children: item[col.accessor] ?? 'N/A' }, col.accessor)) }, index))) })] }) })] }));
// --- Main Modal Component --- //
const GeneralInfoModal = ({ isOpen, onClose }) => {
    const [openAccordion, setOpenAccordion] = useState('hotels');
    const [showMapModal, setShowMapModal] = useState(false);
    const [mapLocationToShow, setMapLocationToShow] = useState(null);
    useEffect(() => {
        const handleKeyDown = (event) => {
            if (event.key === 'Escape')
                onClose();
        };
        if (isOpen) {
            document.addEventListener('keydown', handleKeyDown);
        }
        return () => document.removeEventListener('keydown', handleKeyDown);
    }, [isOpen, onClose]);
    const handleToggle = (title) => {
        setOpenAccordion(openAccordion === title ? null : title);
    };
    const handleShowMap = (location) => {
        setMapLocationToShow(location);
        setShowMapModal(true);
    };
    if (!isOpen)
        return null;
    return (_jsxs(_Fragment, { children: [showMapModal && _jsx(VenueMapModal, { isOpen: showMapModal, onClose: () => setShowMapModal(false), locationName: mapLocationToShow }), _jsx("div", { className: "fixed inset-0 bg-black/60 backdrop-blur-sm flex justify-center items-start z-[100] p-4", onClick: onClose, role: "dialog", "aria-modal": "true", "aria-labelledby": "general-info-title", children: _jsxs("div", { className: "bg-[var(--color-surface)] rounded-xl shadow-xl w-full max-w-2xl my-8 transform transition-all animate-fade-in-up", onClick: (e) => e.stopPropagation(), children: [_jsx("div", { className: "sticky top-0 bg-white/80 backdrop-blur-md z-10 px-6 sm:px-8 py-4 border-b border-[var(--color-border-subtle)]", children: _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("h2", { id: "general-info-title", className: "text-xl sm:text-2xl font-bold text-[var(--color-text-main)]", children: "General Info & Helpdesk" }), _jsx("button", { type: "button", onClick: onClose, "aria-label": "Close general info modal", className: "p-2 -m-2 rounded-full hover:bg-gray-100 transition-colors", children: _jsx(X, { className: "w-6 h-6 text-gray-500" }) })] }) }), _jsxs("div", { className: "max-h-[75vh] overflow-y-auto", children: [_jsx(AccordionItem, { title: "Hotel Details", icon: _jsx(Hotel, { className: "w-5 h-5" }), isOpen: openAccordion === 'hotels', onToggle: () => handleToggle('hotels'), children: _jsx("div", { className: "space-y-4", children: hotelDetails.map(hotel => (_jsxs("div", { className: "p-3 bg-white rounded-md border border-[var(--color-border)]", children: [_jsx("h3", { className: "font-semibold text-[var(--color-text-main)]", children: hotel.name }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: hotel.address }), _jsxs("div", { className: "flex items-center gap-4 mt-2 text-sm flex-wrap", children: [_jsxs("a", { href: `tel:${hotel.phone.replace(/\s/g, '')}`, className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline", children: [_jsx(Phone, { className: "w-4 h-4" }), hotel.phone] }), _jsxs("a", { href: hotel.mapUrl, target: "_blank", rel: "noopener noreferrer", className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline", children: [_jsx(MapPin, { className: "w-4 h-4" }), "View on Google Maps"] }), hotel.name.includes("Novotel") && (_jsxs("button", { onClick: () => handleShowMap('novotel resort general'), className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline", children: [_jsx(Map, { className: "w-4 h-4" }), "View Resort Map"] }))] })] }, hotel.name))) }) }), _jsx(AccordionItem, { title: "Deltek Emergency Contacts", icon: _jsx(Users, { className: "w-5 h-5" }), isOpen: openAccordion === 'contacts', onToggle: () => handleToggle('contacts'), children: _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full text-sm text-left", children: [_jsx("thead", { className: "bg-gray-100", children: _jsxs("tr", { className: "border-b", children: [_jsx("th", { className: "p-2 font-semibold", children: "Name" }), _jsx("th", { className: "p-2 font-semibold", children: "Email" }), _jsx("th", { className: "p-2 font-semibold", children: "Contact" })] }) }), _jsx("tbody", { children: deltekContacts.map(contact => (_jsxs("tr", { className: "border-b", children: [_jsx("td", { className: "p-2 font-medium", children: contact.name }), _jsx("td", { className: "p-2", children: _jsx("a", { href: `mailto:${contact.email}`, className: "text-[var(--color-primary)] hover:underline", children: contact.email }) }), _jsx("td", { className: "p-2", children: _jsx("a", { href: `tel:${contact.contact}`, className: "text-[var(--color-primary)] hover:underline", children: contact.contact }) })] }, contact.name))) })] }) }) }), _jsx(AccordionItem, { title: "Resort Activities", icon: _jsx(Puzzle, { className: "w-5 h-5" }), isOpen: openAccordion === 'activities', onToggle: () => handleToggle('activities'), children: _jsxs("div", { className: "space-y-4", children: [_jsx(ActivityTable, { title: "Outdoor Activities (Chargeable)", timings: leisureActivities.timings.outdoorChargeable, items: leisureActivities.outdoorChargeable, columns: [{ header: 'Activity', accessor: 'activity' }, { header: 'Duration', accessor: 'duration' }, { header: 'Rate', accessor: 'rate' }] }), _jsx(ActivityTable, { title: "Indoor Activities (Chargeable)", timings: leisureActivities.timings.indoorChargeable, items: leisureActivities.indoorChargeable, columns: [{ header: 'Activity', accessor: 'activity' }, { header: 'Duration', accessor: 'duration' }, { header: 'Rate', accessor: 'rate' }] }), _jsx(ActivityTable, { title: "Art & Craft Activities (Chargeable)", timings: leisureActivities.timings.artAndCraft, items: leisureActivities.artAndCraft, columns: [{ header: 'Activity', accessor: 'activity' }, { header: 'Unit', accessor: 'nos' }, { header: 'Rate', accessor: 'rate' }] }), _jsx(ActivityTable, { title: "Indoor & Outdoor Activities (Non-Chargeable)", timings: leisureActivities.timings.nonChargeable, items: leisureActivities.nonChargeable, columns: [{ header: 'Activity', accessor: 'activity' }] }), _jsxs("div", { className: "mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md text-sm text-yellow-800", children: [_jsx("p", { className: "font-semibold", children: "Important Note:" }), _jsx("p", { children: leisureActivities.note })] })] }) }), _jsx(AccordionItem, { title: "Hotel Floor Plans", icon: _jsx(Map, { className: "w-5 h-5" }), isOpen: openAccordion === 'floorplans', onToggle: () => handleToggle('floorplans'), children: _jsxs("div", { className: "p-3 bg-white rounded-md border border-[var(--color-border)]", children: [_jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mb-4", children: "Click to view the general floor plans for accommodation areas at the Radisson Blu Resort." }), _jsxs("div", { className: "grid sm:grid-cols-2 gap-4", children: [_jsxs("button", { onClick: () => handleShowMap('Main Block Accommodations'), className: "text-left p-3 bg-white rounded-md border border-[var(--color-border)] hover:border-[var(--color-primary)] hover:bg-blue-50 transition-colors", children: [_jsx("h3", { className: "font-semibold text-[var(--color-text-main)]", children: "Main Block Rooms" }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: "North & South Wing rooms." })] }), _jsxs("button", { onClick: () => handleShowMap('Villa Accommodations'), className: "text-left p-3 bg-white rounded-md border border-[var(--color-border)] hover:border-[var(--color-primary)] hover:bg-blue-50 transition-colors", children: [_jsx("h3", { className: "font-semibold text-[var(--color-text-main)]", children: "Villa Rooms" }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: "Villas and suites." })] })] })] }) }), _jsx(AccordionItem, { title: "Emergency Services", icon: _jsx(Shield, { className: "w-5 h-5" }), isOpen: openAccordion === 'emergency', onToggle: () => handleToggle('emergency'), children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "p-3 bg-white rounded-md border border-[var(--color-border)]", children: [_jsxs("h3", { className: "font-semibold text-[var(--color-text-main)] flex items-center gap-2", children: [_jsx(Hospital, { className: "w-4 h-4 text-red-500" }), emergencyServices.hospital.name] }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: emergencyServices.hospital.address }), _jsxs("a", { href: `tel:${emergencyServices.hospital.phone.replace(/\s/g, '')}`, className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline text-sm mt-2", children: [_jsx(Phone, { className: "w-4 h-4" }), emergencyServices.hospital.phone] })] }), _jsxs("div", { className: "p-3 bg-white rounded-md border border-[var(--color-border)]", children: [_jsxs("h3", { className: "font-semibold text-[var(--color-text-main)] flex items-center gap-2", children: [_jsx(Shield, { className: "w-4 h-4 text-blue-500" }), emergencyServices.police.name] }), _jsxs("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: ["Incharge: ", emergencyServices.police.incharge] }), _jsxs("div", { className: "text-sm space-y-1 mt-2", children: [_jsxs("a", { href: `tel:${emergencyServices.police.contact}`, className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline", children: [_jsx(Phone, { className: "w-4 h-4" }), emergencyServices.police.contact, " (Contact)"] }), _jsxs("a", { href: `tel:${emergencyServices.police.mobile}`, className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline", children: [_jsx(Phone, { className: "w-4 h-4" }), emergencyServices.police.mobile, " (Mobile)"] }), _jsxs("a", { href: `mailto:${emergencyServices.police.email}`, className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline", children: [_jsx(Mail, { className: "w-4 h-4" }), emergencyServices.police.email] })] })] })] }) }), _jsx(AccordionItem, { title: "Local Amenities", icon: _jsx(ShoppingCart, { className: "w-5 h-5" }), isOpen: openAccordion === 'amenities', onToggle: () => handleToggle('amenities'), children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "p-3 bg-white rounded-md border border-[var(--color-border)]", children: [_jsx("h3", { className: "font-semibold text-[var(--color-text-main)]", children: localAmenities.shopping.name }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: localAmenities.shopping.address }), _jsx("p", { className: "text-xs text-gray-500 mt-1", children: localAmenities.shopping.note })] }), _jsxs("div", { className: "p-3 bg-white rounded-md border border-[var(--color-border)]", children: [_jsx("h3", { className: "font-semibold text-[var(--color-text-main)]", children: localAmenities.supermarket.name }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: localAmenities.supermarket.address }), _jsxs("a", { href: `tel:${localAmenities.supermarket.phone.replace(/\s/g, '')}`, className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline text-sm mt-2", children: [_jsx(Phone, { className: "w-4 h-4" }), localAmenities.supermarket.phone] })] }), localAmenities.rentals && (_jsxs("div", { className: "p-3 bg-white rounded-md border border-[var(--color-border)]", children: [_jsxs("h3", { className: "font-semibold text-[var(--color-text-main)] flex items-center gap-2", children: [_jsx(Car, { className: "w-4 h-4 text-indigo-500" }), localAmenities.rentals.name] }), _jsx("p", { className: "text-sm text-[var(--color-text-secondary)] mt-1", children: localAmenities.rentals.address }), _jsx("p", { className: "text-xs text-gray-500 mt-1", children: localAmenities.rentals.note }), _jsxs("a", { href: localAmenities.rentals.mapUrl, target: "_blank", rel: "noopener noreferrer", className: "flex items-center gap-1.5 text-[var(--color-primary)] hover:underline text-sm mt-2", children: [_jsx(MapPin, { className: "w-4 h-4" }), "View on Google Maps"] })] }))] }) }), _jsx(AccordionItem, { title: "Nearby Restaurants", icon: _jsx(Utensils, { className: "w-5 h-5" }), isOpen: openAccordion === 'restaurants', onToggle: () => handleToggle('restaurants'), children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsxs("h4", { className: "font-bold text-[var(--color-text-main)] mb-2 flex items-center gap-2", children: [_jsx(Building2, { className: "w-4 h-4" }), "Near the Hotels"] }), _jsx("div", { className: "grid sm:grid-cols-2 gap-3", children: restaurants.nearHotels.map(r => _jsx(RestaurantCard, { ...r }, r.name)) })] }), _jsxs("div", { children: [_jsxs("h4", { className: "font-bold text-[var(--color-text-main)] mb-2 flex items-center gap-2", children: [_jsx(MapPin, { className: "w-4 h-4" }), "In South Goa"] }), _jsx("div", { className: "grid sm:grid-cols-2 gap-3", children: restaurants.southGoa.map(r => _jsx(RestaurantCard, { ...r }, r.name)) })] })] }) })] })] }) })] }));
};
export default GeneralInfoModal;
