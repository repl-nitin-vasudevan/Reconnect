import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { Edit, Trash2, Bell, BellRing, Check, Copy, Users, MapPin, Clock, Notebook, Star, Utensils, Coffee, Calendar, Tag } from 'lucide-react';
import { VENUE_LOCATIONS } from '@/constants';
// --- Helper Functions & Data --- //
const categoryStyles = {
    'breakfast': { icon: _jsx(Utensils, { className: "w-4 h-4" }), classes: 'bg-teal-50 text-teal-800', border: 'border-teal-300' },
    'break': { icon: _jsx(Coffee, { className: "w-4 h-4" }), classes: 'bg-yellow-50 text-yellow-800', border: 'border-yellow-300' },
    'lunch': { icon: _jsx(Utensils, { className: "w-4 h-4" }), classes: 'bg-green-50 text-green-800', border: 'border-green-300' },
    'entertainment': { icon: _jsx(Star, { className: "w-4 h-4" }), classes: 'bg-purple-50 text-purple-800', border: 'border-purple-300' },
    'hackathon': { icon: _jsx(Users, { className: "w-4 h-4" }), classes: 'bg-blue-50 text-blue-800', border: 'border-blue-300' },
    'training': { icon: _jsx(Users, { className: "w-4 h-4" }), classes: 'bg-indigo-50 text-indigo-800', border: 'border-indigo-300' },
    'product': { icon: _jsx(Tag, { className: "w-4 h-4" }), classes: 'bg-rose-50 text-rose-800', border: 'border-rose-300' },
    'opening': { icon: _jsx(Calendar, { className: "w-4 h-4" }), classes: 'bg-amber-50 text-amber-800', border: 'border-amber-300' },
    'closing': { icon: _jsx(Star, { className: "w-4 h-4" }), classes: 'bg-cyan-50 text-cyan-800', border: 'border-cyan-300' },
    'company update': { icon: _jsx(Calendar, { className: "w-4 h-4" }), classes: 'bg-emerald-50 text-emerald-800', border: 'border-emerald-300' },
    'planning': { icon: _jsx(Users, { className: "w-4 h-4" }), classes: 'bg-orange-50 text-orange-800', border: 'border-orange-300' },
    'registration': { icon: _jsx(Notebook, { className: "w-4 h-4" }), classes: 'bg-sky-50 text-sky-800', border: 'border-sky-300' },
    'networking': { icon: _jsx(Users, { className: "w-4 h-4" }), classes: 'bg-gray-100 text-gray-800', border: 'border-gray-300' },
    'dinner': { icon: _jsx(Utensils, { className: "w-4 h-4" }), classes: 'bg-slate-50 text-slate-800', border: 'border-slate-300' },
    'departure': { icon: _jsx(Calendar, { className: "w-4 h-4" }), classes: 'bg-gray-100 text-gray-800', border: 'border-gray-300' },
    'default': { icon: _jsx(Calendar, { className: "w-4 h-4" }), classes: 'bg-gray-100 text-gray-800', border: 'border-gray-300' },
};
const getCategoryStyle = (category) => {
    return categoryStyles[category.toLowerCase()] || categoryStyles['default'];
};
const getTagColor = (tag) => {
    let hash = 0;
    for (let i = 0; i < tag.length; i++)
        hash = tag.charCodeAt(i) + ((hash << 5) - hash);
    const hue = hash % 360;
    return `hsl(${hue}, 90%, 96%)`;
};
const getTagTextColor = (tag) => {
    let hash = 0;
    for (let i = 0; i < tag.length; i++)
        hash = tag.charCodeAt(i) + ((hash << 5) - hash);
    const hue = hash % 360;
    return `hsl(${hue}, 60%, 40%)`;
};
const SessionRating = ({ rating, onRate }) => {
    const [hoverRating, setHoverRating] = useState(0);
    return (_jsx("div", { className: "flex items-center gap-0.5", onMouseLeave: () => setHoverRating(0), children: [1, 2, 3, 4, 5].map(star => (_jsx("button", { type: "button", "aria-label": `Rate ${star} star${star > 1 ? 's' : ''}`, onClick: () => onRate(star), onMouseEnter: () => setHoverRating(star), className: "p-1 rounded-full", children: _jsx(Star, { className: `w-5 h-5 transition-all duration-200 ${(hoverRating || rating) >= star ? 'text-yellow-400 fill-yellow-400' : 'text-gray-300 hover:text-yellow-300'}` }) }, star))) }));
};
const BreakoutSessionsViewer = ({ tracks }) => {
    const [activeLeader, setActiveLeader] = useState(tracks[0]?.leader);
    const activeTrack = tracks.find(t => t.leader === activeLeader);
    return (_jsxs("div", { className: "p-5 sm:p-6", children: [_jsx("p", { className: "text-[var(--color-text-secondary)] text-sm mb-4", children: parseDescription("Focused breakout meetings are happening in parallel. Select a track lead below to view the detailed schedule for their team. There will be 10-minute breaks between each session.") }), _jsx("div", { className: "flex flex-wrap gap-2 mb-6 border-b border-[var(--color-border-subtle)] pb-4", children: tracks.map(track => (_jsx("button", { onClick: () => setActiveLeader(track.leader), "aria-pressed": activeLeader === track.leader, className: `px-3 py-1.5 rounded-full text-xs font-semibold border transition-all duration-200 ${activeLeader === track.leader
                        ? 'bg-[var(--color-primary)] text-white border-transparent shadow-sm'
                        : 'bg-white text-[var(--color-text-secondary)] border-[var(--color-border)] hover:bg-gray-50 hover:border-[var(--color-primary-hover)]'}`, children: track.leader }, track.leader))) }), activeTrack ? (_jsxs("div", { className: "animate-fade-in-up duration-300", children: [_jsxs("div", { className: "mb-6 bg-gray-50 p-4 rounded-lg border border-[var(--color-border)]", children: [_jsxs("h4", { className: "text-lg font-bold text-[var(--color-text-main)]", children: [activeTrack.leader, "'s Track"] }), _jsxs("p", { className: "text-sm text-[var(--color-text-secondary)] flex items-center gap-2 mt-1", children: [_jsx(MapPin, { className: "w-4 h-4" }), "Main Location: ", _jsx("span", { className: "font-semibold", children: activeTrack.location })] })] }), activeTrack.sessions.length > 0 ? (_jsx("div", { className: "relative pl-5 border-l-2 border-[var(--color-border)] space-y-8", children: activeTrack.sessions.map((session, index) => (_jsxs("div", { className: "relative", children: [_jsx("div", { className: "absolute -left-[30px] top-1 h-3 w-3 rounded-full bg-white border-2 border-[var(--color-primary)]" }), _jsxs("p", { className: "font-bold text-sm text-[var(--color-primary)] flex items-center gap-2 mb-1", children: [_jsx(Clock, { className: "w-4 h-4" }), session.time] }), _jsx("h5", { className: "font-semibold text-[var(--color-text-main)]", children: session.title }), _jsxs("p", { className: "text-sm text-[var(--color-text-secondary)] flex items-start gap-2 mt-1.5", children: [_jsx(Users, { className: "w-4 h-4 flex-shrink-0 mt-0.5" }), _jsx("span", { children: session.participants })] }), session.location && (_jsxs("p", { className: "text-sm text-amber-700 bg-amber-50 border border-amber-200 rounded-md px-2 py-1 flex items-start gap-2 mt-2", children: [_jsx(MapPin, { className: "w-4 h-4 flex-shrink-0 mt-0.5" }), _jsxs("span", { children: ["Note: This session is at ", _jsx("span", { className: "font-semibold", children: session.location })] })] }))] }, index))) })) : (_jsx("p", { className: "text-sm text-center text-[var(--color-text-subtle)] py-8", children: "No detailed schedule available for this track. Please refer to the room allotment." }))] })) : null] }));
};
const parseDescription = (text) => {
    const parts = text.split(/(\*\*.*?\*\*|\[.*?\]\(.*?\))/g).filter(Boolean);
    return parts.map((part, index) => {
        const boldMatch = part.match(/^\*\*(.*?)\*\*$/);
        if (boldMatch) {
            return _jsx("strong", { className: "font-semibold text-[var(--color-text-main)]", children: boldMatch[1] }, index);
        }
        const linkMatch = part.match(/^\[(.*?)\]\((.*?)\)$/);
        if (linkMatch) {
            const [, linkText, url] = linkMatch;
            const fullUrl = url.startsWith('http') ? url : `https://${url}`;
            return _jsx("a", { href: fullUrl, target: "_blank", rel: "noopener noreferrer", className: "font-semibold text-[var(--color-primary)] hover:underline ml-1", children: linkText }, index);
        }
        return _jsx("span", { children: part }, index);
    });
};
const SessionCard = ({ session, isAdmin, onEdit, onDelete, isSubscribed, onToggleSubscription, isFavorite, onToggleFavorite, onShowMap, showRating, rating, onRate, note, onNoteChange }) => {
    const categoryStyle = getCategoryStyle(session.category);
    const locationKey = session.location.toLowerCase().trim();
    const isMappable = !!VENUE_LOCATIONS[locationKey];
    const [animateBell, setAnimateBell] = useState(false);
    const [animateStar, setAnimateStar] = useState(false);
    const [isCopied, setIsCopied] = useState(false);
    const canRate = showRating && !['breakfast', 'break', 'lunch', 'dinner', 'registration', 'departure', 'networking'].includes(session.category.toLowerCase());
    const handleSubscriptionClick = () => {
        onToggleSubscription();
        setAnimateBell(true);
    };
    const handleFavoriteClick = () => {
        onToggleFavorite();
        setAnimateStar(true);
    };
    const handleCopyDetails = () => {
        const details = `Session: ${session.session}\nTime: ${session.startTime} - ${session.endTime} (IST)\nLocation: ${session.location}${session.speaker ? `\nSpeaker: ${session.speaker}` : ''}`;
        navigator.clipboard.writeText(details).then(() => {
            setIsCopied(true);
            setTimeout(() => setIsCopied(false), 2000);
        });
    };
    return (_jsxs("div", { className: `bg-[var(--color-surface)] rounded-xl shadow-md border-l-4 transition-all duration-300 hover:shadow-xl ${categoryStyle.border}`, children: [_jsxs("div", { className: "sticky top-0 bg-[var(--color-surface)]/95 backdrop-blur-sm z-10 p-5 sm:p-6 border-b border-[var(--color-border-subtle)]", children: [_jsxs("div", { className: `px-3 py-1 rounded-full text-xs font-medium border flex items-center gap-2 mb-2 w-fit ${categoryStyle.classes}`, children: [categoryStyle.icon, " ", session.category] }), _jsx("h3", { className: "text-xl font-bold text-[var(--color-text-main)]", children: session.session })] }), session.breakoutTracks ? (_jsx(BreakoutSessionsViewer, { tracks: session.breakoutTracks })) : (_jsxs(_Fragment, { children: [_jsxs("div", { className: "p-5 sm:p-6", children: [_jsxs("div", { className: "flex items-center gap-2 text-sm text-[var(--color-text-subtle)] mb-4", children: [_jsx(Clock, { className: "w-4 h-4" }), _jsxs("span", { children: [session.startTime, " - ", session.endTime, " (IST)"] })] }), _jsxs("div", { className: "grid md:grid-cols-5 gap-x-6 gap-y-4", children: [_jsx("div", { className: "md:col-span-2", children: _jsxs("div", { className: "space-y-3 text-sm", children: [(session.speakers && session.speakers.length > 0) ? (session.speakers.map((speaker, index) => (_jsxs("div", { className: "flex items-center gap-3", children: [speaker.image ? (_jsx("img", { src: speaker.image, alt: speaker.name, className: "w-10 h-10 rounded-full object-cover shadow-sm border-2 border-white" })) : (_jsx("div", { className: "w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center border border-gray-200", children: _jsx(Users, { className: "w-5 h-5 text-gray-400 flex-shrink-0" }) })), _jsxs("div", { children: [_jsx("p", { className: "font-semibold text-[var(--color-text-main)]", children: speaker.name }), speaker.title && _jsx("p", { className: "text-xs text-[var(--color-text-subtle)] -mt-1", children: speaker.title })] })] }, index)))) : session.speaker ? (_jsxs("div", { className: "flex items-center gap-3", children: [session.speakerImage ? (_jsx("img", { src: session.speakerImage, alt: session.speaker, className: "w-10 h-10 rounded-full object-cover shadow-sm border-2 border-white" })) : (_jsx("div", { className: "w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center border border-gray-200", children: _jsx(Users, { className: "w-5 h-5 text-gray-400 flex-shrink-0" }) })), _jsxs("div", { children: [_jsx("p", { className: "font-semibold text-[var(--color-text-main)]", children: session.speaker }), session.speakerTitle && _jsx("p", { className: "text-xs text-[var(--color-text-subtle)] -mt-1", children: session.speakerTitle })] })] })) : null, _jsxs("div", { className: "flex items-start gap-2 text-[var(--color-text-secondary)]", children: [_jsx(MapPin, { className: "w-4 h-4 flex-shrink-0 mt-0.5" }), _jsxs("div", { children: ["Location:", isMappable ? (_jsx("button", { onClick: () => onShowMap(session.location), className: "font-semibold text-[var(--color-primary)] ml-1 hover:underline text-left transition-colors", children: session.location })) : (_jsx("span", { className: "font-semibold text-[var(--color-text-main)] ml-1", children: session.location }))] })] })] }) }), _jsxs("div", { className: "md:col-span-3", children: [_jsx("p", { className: "text-[var(--color-text-secondary)] text-sm mb-4 leading-relaxed", children: parseDescription(session.description) }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("h4", { className: "font-semibold text-[var(--color-text-main)] text-sm mb-2", children: "\uD83C\uDFAF Objectives" }), _jsx("ul", { className: "text-sm text-gray-600 space-y-1", children: session.objectives.map((obj, idx) => (_jsxs("li", { className: "flex items-start gap-2", children: [_jsx("span", { className: "text-[var(--color-warning)] mt-1.5", children: "\u2022" }), _jsx("span", { children: obj })] }, idx))) })] }), _jsxs("div", { children: [_jsx("h4", { className: "font-semibold text-[var(--color-text-main)] text-sm mb-2", children: "\uD83D\uDCCB Materials" }), _jsx("ul", { className: "text-sm text-gray-600 space-y-1", children: session.materials.map((mat, idx) => (_jsxs("li", { className: "flex items-start gap-2", children: [_jsx("span", { className: "text-[var(--color-secondary)] mt-1.5", children: "\u2022" }), _jsx("span", { children: mat })] }, idx))) })] })] })] })] }), _jsxs("div", { className: "mt-4 pt-4 border-t border-[var(--color-border-subtle)] space-y-4", children: [(session.tags && session.tags.length > 0) && (_jsx("div", { className: "flex flex-wrap gap-2", children: session.tags.map(tag => (_jsx("span", { className: "px-2.5 py-1 text-xs font-medium rounded-full", style: { backgroundColor: getTagColor(tag), color: getTagTextColor(tag) }, children: tag }, tag))) })), canRate && (_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("h4", { className: "font-semibold text-[var(--color-text-main)] text-sm", children: "Your Feedback:" }), _jsx(SessionRating, { rating: rating, onRate: onRate })] }))] })] }), session.preread && (_jsxs("div", { className: "bg-sky-50/70 p-5 sm:p-6 border-t border-[var(--color-border-subtle)]", children: [_jsxs("h4", { className: "flex items-center gap-2 font-bold text-lg text-[var(--color-text-main)] mb-4", children: [_jsx(Notebook, { className: "w-5 h-5 text-[var(--color-primary)]" }), session.preread.title] }), _jsxs("div", { className: "space-y-6 text-sm", children: [_jsxs("div", { children: [_jsx("h5", { className: "font-semibold text-[var(--color-text-secondary)] mb-3", children: "Preparation & Readiness Checklist" }), _jsx("ul", { className: "space-y-3 list-disc list-outside ml-5 text-gray-700", children: session.preread.checklist.map((item, index) => (_jsxs("li", { className: "pl-2", children: [_jsxs("strong", { className: "text-[var(--color-text-main)]", children: [item.title, ":"] }), " ", item.description, item.links && (_jsx("ul", { className: "list-disc list-outside ml-5 mt-1 space-y-1", children: item.links.map(link => (_jsx("li", { className: "pl-2", children: _jsx("a", { href: link.url, target: "_blank", rel: "noopener noreferrer", className: "text-[var(--color-primary)] hover:underline", children: link.text }) }, link.url))) }))] }, index))) })] }), _jsxs("div", { children: [_jsx("h5", { className: "font-semibold text-[var(--color-text-secondary)] mb-3", children: "Additional References" }), _jsx("ul", { className: "space-y-2 list-disc list-outside ml-5 text-gray-700", children: session.preread.references.map((ref, index) => (_jsx("li", { className: "pl-2", children: _jsx("a", { href: ref.url, target: "_blank", rel: "noopener noreferrer", className: "text-[var(--color-primary)] hover:underline", children: ref.text }) }, index))) })] })] })] })), _jsx("div", { className: "bg-gray-50/70", children: _jsxs("details", { className: "p-4 group", children: [_jsxs("summary", { className: "flex items-center gap-2 cursor-pointer text-sm font-semibold text-[var(--color-text-secondary)] hover:text-[var(--color-primary)]", children: [_jsx(Notebook, { className: "w-4 h-4" }), _jsx("span", { children: "My Notes" }), _jsx("span", { className: "text-xs text-gray-400 group-open:hidden", children: "(Click to expand)" })] }), _jsxs("div", { className: "mt-3", children: [_jsx("textarea", { value: note, onChange: (e) => onNoteChange(e.target.value), placeholder: "Jot down key takeaways, questions, or ideas here...", className: "w-full p-2 border border-[var(--color-border)] rounded-md shadow-sm focus:ring-2 focus:ring-[var(--color-primary)] focus:border-[var(--color-primary)] transition-shadow text-sm min-h-[100px]", "aria-label": `Notes for session ${session.session}` }), _jsx("p", { className: "text-xs text-gray-400 mt-1.5 text-right", children: "Notes are saved automatically to this device." })] })] }) })] })), _jsxs("div", { className: "sticky bottom-0 bg-[var(--color-surface)]/95 backdrop-blur-sm z-10 flex items-center justify-end gap-1 p-4 border-t border-[var(--color-border-subtle)]", children: [_jsx("button", { onClick: handleCopyDetails, className: "p-2 rounded-full hover:bg-gray-100 transition-colors text-[var(--color-text-subtle)]", "aria-label": "Copy session details", children: isCopied ? _jsx(Check, { className: "w-5 h-5 text-green-500" }) : _jsx(Copy, { className: "w-5 h-5" }) }), _jsx("button", { onClick: handleFavoriteClick, onAnimationEnd: () => setAnimateStar(false), className: `p-2 rounded-full transition-colors ${isFavorite ? 'text-yellow-500 bg-yellow-50 hover:bg-yellow-100' : 'text-[var(--color-text-subtle)] hover:bg-gray-100'}`, "aria-label": isFavorite ? `Remove ${session.session} from favorites` : `Add ${session.session} to favorites`, children: _jsx(Star, { className: `w-5 h-5 transition-all ${isFavorite ? 'fill-current' : ''} ${animateStar ? 'animate-star-pop' : ''}` }) }), _jsx("button", { onClick: handleSubscriptionClick, onAnimationEnd: () => setAnimateBell(false), className: `p-2 rounded-full transition-colors ${isSubscribed ? 'text-[var(--color-warning)] bg-yellow-50 hover:bg-yellow-100' : 'text-[var(--color-text-subtle)] hover:bg-gray-100'}`, "aria-label": isSubscribed ? `Unsubscribe from ${session.session}` : `Subscribe to ${session.session}`, children: isSubscribed
                            ? _jsx(BellRing, { className: `w-5 h-5 ${animateBell ? 'animate-ring' : ''}` })
                            : _jsx(Bell, { className: `w-5 h-5 ${animateBell ? 'animate-ring' : ''}` }) }), isAdmin && (_jsxs(_Fragment, { children: [_jsx("button", { onClick: onEdit, className: "p-2 rounded-full hover:bg-gray-100 transition-colors", "aria-label": `Edit session: ${session.session}`, children: _jsx(Edit, { className: "w-4 h-4 text-[var(--color-primary)]" }) }), _jsx("button", { onClick: onDelete, className: "p-2 rounded-full hover:bg-gray-100 transition-colors", "aria-label": `Delete session: ${session.session}`, children: _jsx(Trash2, { className: "w-4 h-4 text-[var(--color-danger)]" }) })] }))] })] }));
};
export default SessionCard;
